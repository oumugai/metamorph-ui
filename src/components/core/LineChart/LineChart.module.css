.lineChart {
  background: var(--card-bg-light);
  backdrop-filter: blur(10px);
  border-radius: 24px;
  padding: 2rem;
  margin-top: 2rem;
  box-shadow:
    15px 15px 30px rgba(0, 0, 0, 0.15),
    -15px -15px 30px rgba(255, 255, 255, 0.8),
    inset 5px 5px 10px rgba(255, 255, 255, 0.5),
    inset -5px -5px 10px rgba(0, 0, 0, 0.05);
  transition: var(--transition-smooth);
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
}

:global(.dark-mode) .lineChart {
  background: var(--card-bg-dark);
  box-shadow: 
    15px 15px 30px rgba(0, 0, 0, 0.3),
    -15px -15px 30px rgba(40, 40, 40, 0.2),
    inset 5px 5px 10px rgba(60, 60, 60, 0.2),
    inset -5px -5px 10px rgba(0, 0, 0, 0.1);
}

.title {
  font-size: 1.5rem;
  margin-bottom: 1rem;
  background: linear-gradient(90deg, var(--color-primary-500), var(--color-primary-900));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

.description {
  font-size: 1.1rem;
  line-height: 1.6;
  margin-bottom: 2rem;
  opacity: 0.8;
}

.chartContainer {
  width: 100%;
  flex: 1;
  position: relative;
  overflow: hidden;
}

.chartContainer:after {
  content: '';
  display: block;
  padding-bottom: 50%; /* デフォルトのアスペクト比2:1 */
}

.chart {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  overflow: visible;
}

.axis {
  stroke: var(--text-light);
  stroke-width: 2;
}

:global(.dark-mode) .axis {
  stroke: var(--text-dark);
}

.axisLabel {
  font-size: 12px;
  fill: var(--text-light);
}

:global(.dark-mode) .axisLabel {
  fill: var(--text-dark);
}

.grid .gridLine {
  stroke: rgba(0, 0, 0, 0.2);
  stroke-dasharray: 4;
  stroke-width: 1;
}

.grid .zeroLine {
  stroke: rgba(0, 0, 0, 0.4);
  stroke-dasharray: none;
  stroke-width: 1.5;
}

:global(.dark-mode) .grid .gridLine {
  stroke: rgba(255, 255, 255, 0.2);
}

:global(.dark-mode) .grid .zeroLine {
  stroke: rgba(255, 255, 255, 0.4);
}

@keyframes lineUpdate {
  0% {
    opacity: 0.5;
    transform: scaleY(0.8);
  }
  100% {
    opacity: 1;
    transform: scaleY(1);
  }
}

.line {
  stroke: url(#lineGradient);
  stroke-width: 3;
  fill: none;
  filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));
  animation: drawLine 1.5s ease-out forwards;
  transform-origin: center;
  transform-box: fill-box;
}

.line[data-animation="enter"] {
  animation: drawLine var(--morph-duration) var(--morph-easing) forwards;
}

.line[data-animation="update"] {
  animation: dataUpdate var(--morph-duration) var(--morph-easing);
}

@keyframes pointAppear {
  from {
    opacity: 0;
    transform: scale(0);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pointUpdate {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.5);
  }
  100% {
    transform: scale(1);
  }
}

.point {
  fill: var(--color-primary-500);
  stroke: white;
  stroke-width: 2;
  transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  cursor: pointer;
  transform-origin: center;
  transform-box: fill-box;
  animation: pointAppear 0.6s var(--morph-easing) forwards;
}

.point[data-animation="enter"] {
  animation: morphIn var(--morph-duration) var(--morph-easing) forwards;
}

.point[data-animation="update"] {
  animation: dataUpdate var(--morph-duration) var(--morph-easing);
}

:global(.dark-mode) .point {
  stroke: var(--card-bg-dark);
}

.point:hover,
.point.active {
  fill: var(--color-primary-900);
  transform: scale(1.5);
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
  transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.tooltip rect {
  fill: var(--card-bg-light);
  stroke: rgba(0, 0, 0, 0.1);
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
}

:global(.dark-mode) .tooltip rect {
  fill: var(--card-bg-dark);
  stroke: rgba(255, 255, 255, 0.1);
}

.tooltip text {
  fill: currentColor;
  font-size: 12px;
  font-weight: 500;
}

.updateButton {
  margin-top: 2rem;
  background: linear-gradient(135deg, var(--color-primary-500), var(--color-primary-900));
  color: white;
  border: none;
  border-radius: 12px;
  padding: 0.8rem 1.5rem;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: var(--transition-smooth);
  box-shadow: 
    5px 5px 10px rgba(0, 0, 0, 0.2),
    -5px -5px 10px rgba(255, 255, 255, 0.1);
}

.updateButton:hover {
  transform: translateY(-5px) scale(1.05);
  box-shadow: 
    8px 8px 16px rgba(0, 0, 0, 0.25),
    -8px -8px 16px rgba(255, 255, 255, 0.1);
}

.updateButton:active {
  transform: translateY(2px) scale(0.98);
  box-shadow: 
    3px 3px 6px rgba(0, 0, 0, 0.15),
    -3px -3px 6px rgba(255, 255, 255, 0.1);
  transition: transform 0.1s ease, box-shadow 0.1s ease;
}

@keyframes drawLine {
  from {
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
  }
  to {
    stroke-dasharray: 1000;
    stroke-dashoffset: 0;
  }
}