.inputContainer {
  position: relative;
  width: 100%;
  margin-bottom: 1rem;
}

.label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: inherit;
  transition: var(--transition-smooth);
}

.input {
  background: rgba(255, 255, 255, 0.7);
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 12px;
  padding: 12px 16px;
  font-size: 1rem;
  width: 100%;
  transition: var(--transition-smooth);
  box-shadow: 
    inset 3px 3px 6px rgba(0, 0, 0, 0.1),
    inset -3px -3px 6px rgba(255, 255, 255, 0.7);
  color: inherit;
}

:global(.dark-mode) .input {
  background: rgba(30, 30, 30, 0.8);
  border-color: rgba(255, 255, 255, 0.1);
  box-shadow: 
    inset 3px 3px 6px rgba(0, 0, 0, 0.2),
    inset -3px -3px 6px rgba(60, 60, 60, 0.1);
}

.input:focus {
  background: rgba(255, 255, 255, 0.9);
  border-color: var(--color-primary-500);
  transform: translateY(-2px);
  box-shadow: 
    inset 3px 3px 6px rgba(0, 0, 0, 0.1),
    inset -3px -3px 6px rgba(255, 255, 255, 0.7),
    0 5px 15px rgba(0, 0, 0, 0.1);
  outline: none;
}

:global(.dark-mode) .input:focus {
  background: rgba(40, 40, 40, 0.9);
  box-shadow: 
    inset 3px 3px 6px rgba(0, 0, 0, 0.2),
    inset -3px -3px 6px rgba(60, 60, 60, 0.1),
    0 5px 15px rgba(0, 0, 0, 0.2);
}

.input::placeholder {
  color: rgba(0, 0, 0, 0.4);
}

:global(.dark-mode) .input::placeholder {
  color: rgba(255, 255, 255, 0.4);
}

.helperText {
  font-size: 0.875rem;
  margin-top: 0.5rem;
  color: rgba(0, 0, 0, 0.6);
  transition: var(--transition-smooth);
}

:global(.dark-mode) .helperText {
  color: rgba(255, 255, 255, 0.6);
}

.error .input {
  border-color: var(--color-error);
  background: rgba(255, 0, 0, 0.05);
}

.error .helperText {
  color: var(--color-error);
}

/* Input sizes */
.sm {
  padding: 8px 12px;
  font-size: 0.875rem;
}

.md {
  padding: 12px 16px;
  font-size: 1rem;
}

.lg {
  padding: 16px 20px;
  font-size: 1.125rem;
}

/* Disabled state */
.disabled {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}

/* With icon */
.withIcon {
  padding-left: 40px;
}

.icon {
  position: absolute;
  left: 12px;
  top: 50%;
  transform: translateY(-50%);
  color: rgba(0, 0, 0, 0.4);
  transition: var(--transition-smooth);
}

:global(.dark-mode) .icon {
  color: rgba(255, 255, 255, 0.4);
}

.error .icon {
  color: var(--color-error);
}