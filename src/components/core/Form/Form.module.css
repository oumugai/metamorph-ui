.formSection {
  margin-top: 4rem;
}

.formGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
}

.formCard {
  background: var(--card-bg-light);
  backdrop-filter: blur(10px);
  border-radius: 24px;
  padding: 2rem;
  box-shadow: 
      15px 15px 30px rgba(0, 0, 0, 0.15),
      -15px -15px 30px rgba(255, 255, 255, 0.8),
      inset 5px 5px 10px rgba(255, 255, 255, 0.5),
      inset -5px -5px 10px rgba(0, 0, 0, 0.05);
  transition: var(--transition-smooth);
  position: relative;
  overflow: hidden;
  will-change: transform, box-shadow;
}

:global(.dark-mode) .formCard {
  background: var(--card-bg-dark);
  box-shadow: 
      15px 15px 30px rgba(0, 0, 0, 0.3),
      -15px -15px 30px rgba(40, 40, 40, 0.2),
      inset 5px 5px 10px rgba(60, 60, 60, 0.2),
      inset -5px -5px 10px rgba(0, 0, 0, 0.1);
}

.formCard:hover {
  transform: translateY(-5px);
  box-shadow: 
      20px 20px 40px rgba(0, 0, 0, 0.2),
      -20px -20px 40px rgba(255, 255, 255, 0.9),
      inset 5px 5px 10px rgba(255, 255, 255, 0.5),
      inset -5px -5px 10px rgba(0, 0, 0, 0.05);
}

:global(.dark-mode) .formCard:hover {
  box-shadow: 
      20px 20px 40px rgba(0, 0, 0, 0.4),
      -20px -20px 40px rgba(40, 40, 40, 0.3),
      inset 5px 5px 10px rgba(60, 60, 60, 0.2),
      inset -5px -5px 10px rgba(0, 0, 0, 0.1);
}

.input {
  background: rgba(255, 255, 255, 0.7);
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 12px;
  padding: 12px 16px;
  font-size: 1rem;
  width: 100%;
  transition: var(--transition-smooth);
  box-shadow: 
      inset 3px 3px 6px rgba(0, 0, 0, 0.1),
      inset -3px -3px 6px rgba(255, 255, 255, 0.7);
  margin-bottom: 1rem;
}

:global(.dark-mode) .input {
  background: rgba(30, 30, 30, 0.8);
  border-color: rgba(255, 255, 255, 0.1);
  color: var(--text-dark);
  box-shadow: 
      inset 3px 3px 6px rgba(0, 0, 0, 0.2),
      inset -3px -3px 6px rgba(60, 60, 60, 0.1);
}

.input:focus {
  background: rgba(255, 255, 255, 0.9);
  border-color: var(--color-primary-500);
  transform: translateY(-2px);
  box-shadow: 
      inset 3px 3px 6px rgba(0, 0, 0, 0.1),
      inset -3px -3px 6px rgba(255, 255, 255, 0.7),
      0 5px 15px rgba(0, 0, 0, 0.1);
  outline: none;
}

:global(.dark-mode) .input:focus {
  background: rgba(40, 40, 40, 0.9);
  box-shadow: 
      inset 3px 3px 6px rgba(0, 0, 0, 0.2),
      inset -3px -3px 6px rgba(60, 60, 60, 0.1),
      0 5px 15px rgba(0, 0, 0, 0.2);
}

.checkboxLabel {
  display: flex;
  align-items: center;
  margin-bottom: 1rem;
  cursor: pointer;
}

.checkboxContainer {
  position: relative;
  display: inline-block;
  width: 24px;
  height: 24px;
  margin-right: 8px;
  vertical-align: middle;
}

.checkbox {
  position: absolute;
  opacity: 0;
  width: 24px;
  height: 24px;
  margin: 0;
  cursor: pointer;
}

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.7);
  border-radius: 6px;
  transition: all 0.2s ease-in-out;
  border: 2px solid rgba(0, 0, 0, 0.2);
  box-shadow:
      inset 2px 2px 4px rgba(0, 0, 0, 0.1),
      inset -2px -2px 4px rgba(255, 255, 255, 0.7);
  pointer-events: none;
}

:global(.dark-mode) .checkmark {
  background: rgba(30, 30, 30, 0.8);
  border-color: rgba(255, 255, 255, 0.1);
  box-shadow: 
      inset 2px 2px 4px rgba(0, 0, 0, 0.2),
      inset -2px -2px 4px rgba(60, 60, 60, 0.1);
}

.checkbox:checked + .checkmark {
  background: var(--color-primary-500);
  border-color: var(--color-primary-500);
  box-shadow: none;
  transform: scale(0.95);
  opacity: 1;
}

/* Light modeでのチェックボックス（チェック時）のスタイル明示的に指定 */
:global(.light-mode) .checkbox:checked + .checkmark {
  background: var(--color-primary-500);
  border-color: var(--color-primary-500);
  opacity: 1;
}

.checkmark:after {
  content: '';
  position: absolute;
  opacity: 0;
  left: 7px;
  top: 3px;
  width: 6px;
  height: 11px;
  border: solid white;
  border-width: 0 3px 3px 0;
  transform: rotate(45deg) scale(0.5) translateY(10px);
  transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.checkbox:checked + .checkmark:after {
  opacity: 1;
  transform: rotate(45deg) scale(1) translateY(0);
  animation: checkmark 0.4s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
}

@keyframes checkmark {
  0% {
    opacity: 0;
    transform: rotate(45deg) scale(0.5) translateY(10px);
  }
  50% {
    opacity: 0.5;
    transform: rotate(45deg) scale(1.2) translateY(-2px);
  }
  100% {
    opacity: 1;
    transform: rotate(45deg) scale(1) translateY(0);
  }
}

.checkbox:checked + .checkmark {
  animation: pop 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

@keyframes pop {
  0% {
    transform: scale(0.95);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(0.95);
  }
}

@media (max-width: 768px) {
  .formGrid {
    grid-template-columns: 1fr;
  }
}