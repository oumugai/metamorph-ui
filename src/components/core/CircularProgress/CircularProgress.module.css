.circularProgress {
  position: relative;
  width: 100%;
  height: 100%;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.circularProgress svg {
  width: 100%;
  height: 100%;
}

.backgroundCircle {
  stroke: rgba(0, 0, 0, 0.1);
}

:global(.dark-mode) .backgroundCircle {
  stroke: rgba(255, 255, 255, 0.1);
}

@keyframes rotateProgress {
  from {
    transform: rotate(-90deg);
  }
  to {
    transform: rotate(270deg);
  }
}

@keyframes numberChange {
  0% {
    transform: translateY(20px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes circleAppear {
  0% {
    stroke-dashoffset: var(--circumference);
    opacity: 0;
  }
  100% {
    stroke-dashoffset: var(--offset);
    opacity: 1;
  }
}

.progressCircle {
  stroke: var(--color-primary-500);
  transition: stroke-dashoffset 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  transform-origin: center;
  animation: circleAppear 0.8s var(--morph-easing) forwards;
}

.progressCircle.animated {
  animation:
    circleAppear 0.8s var(--morph-easing) forwards,
    pulse 2s infinite;
}

.progressCircle[data-animation="enter"] {
  animation: morphIn var(--morph-duration) var(--morph-easing) forwards;
}

.progressCircle[data-animation="update"] {
  animation: dataUpdate var(--morph-duration) var(--morph-easing),
             rotateProgress var(--morph-duration) var(--morph-easing);
}

.content {
  position: absolute;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.value {
  font-size: calc(var(--calculated-size) * 0.25);
  font-weight: 600;
  background: linear-gradient(135deg, var(--color-primary-500), var(--color-primary-900));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  transition: font-size 0.3s ease;
  animation: numberChange 0.6s var(--morph-easing) forwards;
}

.value[data-animation="enter"] {
  animation: morphIn var(--morph-duration) var(--morph-easing) forwards;
}

.value[data-animation="update"] {
  animation: dataUpdate var(--morph-duration) var(--morph-easing);
}

.label {
  font-size: calc(var(--calculated-size) * 0.14);
  margin-top: 0.25em;
  opacity: 0.8;
  transition: font-size 0.3s ease;
}

@keyframes pulse {
  0% {
    filter: brightness(1);
  }
  50% {
    filter: brightness(1.2);
  }
  100% {
    filter: brightness(1);
  }
}

/* ニューモーフィズム効果 */
.circularProgress::before {
  content: '';
  position: absolute;
  top: calc(var(--stroke-width) * -0.5);
  left: calc(var(--stroke-width) * -0.5);
  right: calc(var(--stroke-width) * -0.5);
  bottom: calc(var(--stroke-width) * -0.5);
  border-radius: 50%;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
  z-index: -1;
  box-shadow: 
    10px 10px 20px rgba(0, 0, 0, 0.1),
    -10px -10px 20px rgba(255, 255, 255, 0.5);
}

:global(.dark-mode) .circularProgress::before {
  background: linear-gradient(135deg, rgba(40, 40, 40, 0.1), rgba(0, 0, 0, 0));
  box-shadow: 
    10px 10px 20px rgba(0, 0, 0, 0.3),
    -10px -10px 20px rgba(60, 60, 60, 0.1);
}